// <auto-generated />
using System;
using GraduationProject_E_ParkingSystem.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduationProject_E_ParkingSystem.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("feedbacks");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.ParkingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int?>("ParkingSpotId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParkingSpotId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("parkingRecords");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.ParkingSetting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("PricePerHour")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("parkingSettings");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.ParkingSpots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("Isbooked")
                        .HasColumnType("bit");

                    b.Property<string>("SlotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCostPaid")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.Feedback", b =>
                {
                    b.HasOne("GraduationProject_E_ParkingSystem.Models.User", "User")
                        .WithMany("feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.ParkingRecord", b =>
                {
                    b.HasOne("GraduationProject_E_ParkingSystem.Models.ParkingSpots", "ParkingSpot")
                        .WithMany("ParkingRecords")
                        .HasForeignKey("ParkingSpotId");

                    b.HasOne("GraduationProject_E_ParkingSystem.Models.Payment", "payment")
                        .WithOne("ParkingRecord")
                        .HasForeignKey("GraduationProject_E_ParkingSystem.Models.ParkingRecord", "PaymentId");

                    b.HasOne("GraduationProject_E_ParkingSystem.Models.User", "User")
                        .WithMany("ParkingRecords")
                        .HasForeignKey("UserId");

                    b.Navigation("ParkingSpot");

                    b.Navigation("User");

                    b.Navigation("payment");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.ParkingSpots", b =>
                {
                    b.Navigation("ParkingRecords");
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.Payment", b =>
                {
                    b.Navigation("ParkingRecord")
                        .IsRequired();
                });

            modelBuilder.Entity("GraduationProject_E_ParkingSystem.Models.User", b =>
                {
                    b.Navigation("ParkingRecords");

                    b.Navigation("feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
