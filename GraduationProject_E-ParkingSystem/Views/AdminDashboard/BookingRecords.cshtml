@{
	ViewData["Title"] = "BookingRecords";
	Layout = "_AdminLayout";
}
@model List<ParkingRecord>

<style>
	.dateForm {
		display: flex;
	}

	.NameForDetails {
	
		color: #555555 !important
	}
	.NameForDetails:hover {
		text-decoration: underline !important;
		cursor: pointer;
		/* border-bottom: 1px solid black; */
	}


	@@media (max-width: 632px) {
		form.d-flex {
			flex-direction: column !important;
			align-items: stretch !important;
		}

		form.d-flex .form-group {
			width: 100%;
		}

		.dateForm {
			display: block;
		}

		.mt-3 {
			flex-direction: column;
			width: 100% !important;
			align-items: stretch;
		}

		.mt-3 a {
			width: 100% !important;
		}
	}
</style>

<h4 class="page-title" style="font-weight: 900; font-size: 27px;">Booking Records</h4>
<form method="get" class="d-flex align-items-end gap-3 mb-4 flex-wrap">
	<div class="form-group">
		<label for="from">From:</label>
		<input type="datetime-local"
			   value="@ViewBag.From"
			   name="from"
			   id="from"
			   class="form-control" />
	</div>

	<div class="form-group">
		<label for="to">To:</label>
		<input type="datetime-local"
			   name="to"
			   value="@ViewBag.To"
			   id="to"
			   class="form-control" />
	</div>

	<div class="form-group">
		<label for="search">Car License Plate:</label>
		<input type="text"
			   name="search"
			   id="search"
			   class="form-control"
			   placeholder="Enter Car License Plate"
			   value="@ViewBag.Search" 
			   autocomplete="off"/>
	</div>

	<div class="form-group d-flex gap-2">
		<button type="submit" onclick="scrollToTableOnReload()" class="btn btn-primary">Search / Filter</button>

		<a href="@Url.Action("AllRecords", "AdminDashboard")" onclick="scrollToTableOnReload()" style="margin-left: 10px" class="btn btn-secondary">Reset</a>
	</div>
</form>





<div class="card">
	<div class="card-header">
		<div class="card-title">All Bookings <i style="color: yellowgreen" class="fa-solid fa-face-smile-wink"></i></div>
	</div>
	<div class="card-body">
		<div class="card-sub">
			Here are all the bookings made on our platform, easy to <span style="color: red">view</span>.



		</div>
		<div class="table-responsive">
			<table id="recordsTable" class="table table-bordered table-hover" style="text-align: center">
				<thead>
					<tr>
						<th>#</th>
						<th>Reserver</th>
						<th>Reserved Slot</th>
						@* <th>Date</th> *@
						<th>Staring Date</th>

						<th>From</th>
						<th>To</th>
						<th>All duration</th>
						<th>Amount </th>
						<th>Plate Number</th>
						<th>Vehicle Type</th>
					</tr>
				</thead>
				<tbody>
					@if (Model != null && Model.Any())
					{
						int count = 0;
						foreach (var i in Model)
						{
							count++;
							<tr>
								<th scope="row">@count</th>
								<td class="date-column">
									<a class="NameForDetails"  asp-action="UserDetails" asp-controller="AdminDashboard" asp-route-id="@i.User.Id">@i.User.FName @i.User.LName</a>
								</td>

								<td class="date-column">@(i.ParkingSpot != null ? i.ParkingSpot.SlotName : "Deleted !")</td>
								<td class="date-column">@i.StartTime.ToString("yyyy-MM-dd")</td>
								<td class="date-column">@i.StartTime.ToString("hh:mm tt")</td>
								<td class="td-hhh date-column">@i.EndTime.ToString("hh:mm tt")</td>
@* 
								@{
									var displayEndTime = i.StartTime.Date != i.EndTime.Date
									? i.EndTime.ToString("yyyy-MM-dd hh:mm tt")
									: i.EndTime.ToString("hh:mm tt");
								}

								<td class="date-column enddate">@displayEndTime</td>
 *@

								<td>
									@{
										var duration = i.EndTime - i.StartTime;
										var hours = duration.Hours;
										var minutes = duration.Minutes;
									}

									@(
																(hours != 0 || minutes != 0)
																? $"{(hours != 0 ? $"{hours}h " : "")}{(minutes != 0 ? $"{minutes}m" : "")}"
																: ""
																)
								</td>

								<td class="date-column">@i.Cost $</td>
								<td class="date-column">@i.PlateNumber</td>
								@if (i.vehicleType == "Car")
								{
									<td><i style="color: darkblue" class="fa-solid fa-car"></i></td>
								}
								else
								{
									<td><i style="color: brown" class="fa-solid fa-bus"></i></td>

								}
								@* <td class="date-column">@i.payment.PaymentMethod</td> *@
							</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
@* <button id="scroll" onclick="upScroll()"><i class="fa-solid fa-arrow-up"></i></button> *@
<style>

/* 	#scroll {
		position: fixed;
		bottom: 40px;
		right: 10px;
		width: 40px;
		border-radius: 10px;
		text-align: center;
		background-color: black;
		color: white;
		border: 2px solid black;
		display: none;
		cursor: pointer;
		transition: all 0.5s;
		opacity: 0.8;
	}

		#scroll:hover {
			background: #444; 
			t ransform: scale(1.1); 
		}*/

	thead {
		position: sticky;
		top: -1px;
		/* height: 30px */
		background-color: white;
		z-index: 1;
	}

		thead th {
			box-shadow: 0 2px 5px rgba(0,0,0,0.1);
			background-color: #f8f9fa; /* لون خفيف */
		}
		.table-responsive {
    max-height: 500px; 
    overflow-y: auto;
    position: relative;
}

	.date-column {
		min-width: 100px; /* أو أي عرض تحبه */
		/* max-width: 100px; */
		white-space: nowrap; /* علشان التاريخ ميكسرش سطر */
	}

	.enddate{
		min-width: 170px; /* أو أي عرض تحبه */
		max-width: 170px;
		white-space: nowrap; /* علشان التاريخ ميكسرش سطر */
	}
</style>
@* <script>
	// يظهر الزر لما المستخدم ينزل تحت شوية
	window.onscroll = function () {
		let btn = document.getElementById("scroll");
		if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
			btn.style.display = "block";
		} else {
			btn.style.display = "none";
		}
	};

	// عند الضغط عليه، يرجع لفوق بسلاسة
	function upScroll() {
		window.scrollTo({ top: 0, behavior: 'smooth' });
	}
</script>
 *@
<script>
	// حفظ الرغبة بالرجوع للجدول فقط
	function scrollToTableOnReload() {
		localStorage.setItem('scrollToTable', 'true');
		location.reload();
	}

	// بعد تحميل الصفحة
	window.addEventListener('load', () => {
		if (localStorage.getItem('scrollToTable') === 'true') {
			const table = document.getElementById('recordsTable');
			if (table) {
				table.scrollIntoView({ behavior: 'smooth', block: 'start' });
			}
			localStorage.removeItem('scrollToTable');
		}
	});
	let plateInput = document.getElementById("search");

	plateInput.addEventListener('input', function () {
		let raw = plateInput.value.replace(/[^0-9\u0621-\u064A]/gi, ''); // مسح كل حاجة غير الحروف العربية والأرقام

		let letters = '';
		let numbers = '';

		for (let i = 0; i < raw.length; i++) {
			const char = raw[i];
			if (/[\u0621-\u064A]/.test(char) && letters.length < 3) {
				letters += char;
			} else if (/[0-9]/.test(char) && numbers.length < 4) {
				numbers += char;
			}
		}

		const formatted = letters.split('').join(' ') + (letters && numbers ? ' | ' : '') + numbers;
		plateInput.value = formatted;

		const plateRegex = /^[\u0621-\u064A]{1,3}\|?[0-9]{1,4}$/;
		const plainPlate = letters + numbers;
		const errorElement = document.getElementById('plate-number-error');

		if (!plateRegex.test(plainPlate)) {
			errorElement.textContent = "صيغة غير صحيحة. يجب أن تتكون من 1-3 حروف عربية و1-4 أرقام.";
			plateInput.classList.add('is-invalid');
			plateNumberValid = false;
		} else {
			errorElement.textContent = '';
			plateInput.classList.remove('is-invalid');
			plateNumberValid = true;
		}
	});

	plateInput.addEventListener("keypress", function (event) {
		const char = event.key;
		if (!/[\u0621-\u064A0-9]/.test(char)) {
			event.preventDefault(); // منع أي إدخال غير حروف عربية أو أرقام
			return;
		}

		const current = plateInput.value.replace(/[^0-9\u0621-\u064A]/gi, '');
		let letterCount = 0;
		let numberCount = 0;

		for (let i = 0; i < current.length; i++) {
			const c = current[i];
			if (/[\u0621-\u064A]/.test(c)) letterCount++;
			else if (/[0-9]/.test(c)) numberCount++;
		}

		if (/[\u0621-\u064A]/.test(char) && letterCount >= 3) {
			event.preventDefault();
		} else if (/[0-9]/.test(char) && numberCount >= 4) {
			event.preventDefault();
		}
	});

</script>
